{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","utils/likesApi.js","utils/listenlaterApi.js","utils/postApi.js","components/Loader/Loader.js","components/PostCard/PostCard.jsx","components/DisplayPosts/DisplayPosts.jsx","pages/Profile/Profile.jsx","components/Header/Header.jsx","components/AddPostForm/AddPostForm.jsx","pages/Feed/Feed.jsx","pages/ListenLater/ListenLater.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","Authorization","SignUpPage","useState","message","passwordError","setError","email","password","passwordConf","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","isPasswordMatch","passwordOne","a","preventDefault","formData","FormData","append","forEach","item","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","inverted","Form","onSubmit","Segment","stacked","as","Input","placeholder","onChange","required","type","files","Button","to","LoginPage","create","postId","removeLike","likeId","removeListenLater","listenLaterId","post","getAll","deletePost","Loading","Loader","size","active","PostCard","posts","loggedUser","isProfile","addLike","listenLater","likeInit","likes","findIndex","like","likeColor","clickHandler","_id","listenLaterInit","listenlater","listen","listenLaterColor","listenLaterHandler","Card","maxHeight","color","raised","Content","Header","Image","avatar","src","photoUrl","bordered","Description","artist","genre","song","mood","Icon","onClick","length","DisplayPosts","loading","Group","itemsPerRow","stackable","Dimmer","reverse","map","ProfilePage","setPosts","setProfileUser","setLoading","useParams","likesAPI","listenlaterAPI","listenlaterId","useCallback","data","postsAPI","getPosts","useEffect","centered","Row","PageHeader","rounded","Divider","handleLogout","id","floated","circular","List","horizontal","Item","Popup","content","trigger","AddPostForm","handleSubmit","handleAddPost","position","Field","on","positionFixed","animated","visible","hidden","Feed","ListenLater","numPhotosCol","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5a3f0268.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  const tokenService =  {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };\n  \n  export default tokenService;","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user // assuming you are sending a multipart-formdata request a.k.a. uploading a photo\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getProfile(username){\n  console.log('getProfile calling')\n  return fetch(BASE_URL + username, {\n    headers: {\n      Authorization: \"Bearer \" + tokenService.getToken(), // <- since this will be called when we're logged in, send over the jwt token\n      // so the server knows who's making the request from the client\n    }\n  }).then(res => {\n    // This function happens when the browser recieves a response from the express server\n    if(res.ok) return res.json();\n    throw new Error('Error from getProfile Request, check the server terminal!')\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nconst userService = {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n};\n\nexport default userService;\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\n\nimport \"./SignupPage.css\";\n\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Button, Checkbox, Form, Grid, Segment } from 'semantic-ui-react'\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: \"\",\n    passwordError: false\n  })\n\n  // setting up the useState for user sign up form below\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n  })\n\n  // setting up the useState for the photo upload below\n  const [selectedFile, setSelectedFile] = useState('')\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n  function handleImageInput(e) {\n    console.log(e.target.files, \"<-- this is the image upload\")\n    setSelectedFile(e.target.files[0])\n  }\n\n  function isPasswordMatch(passwordOne, passwordConf) {\n    return passwordOne === passwordConf;\n  }\n\n  // function to handle form submission using 'formdata' \n  // \n  async function handleSubmit(e) {\n    e.preventDefault()\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({ message: 'Passwords Must Match!', passwordError: true })\n    setError({ message: '', passwordError: false })\n    const formData = new FormData()\n    formData.append('photo', selectedFile)\n    for (let value in state) {\n      formData.append(value, state[value]);\n    }\n\n    console.log(formData.forEach((item) => console.log(item)), \"<- this is each value in the formData\")\n\n    try {\n      await userService.signup(formData);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      setError({ message: err.message, passwordError: false })\n    }\n  }\n\n\n\n  return (\n    <Grid\n    className=\"test\"\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column className=\"SignUpColumn\" style={{ maxWidth: 450 }} inverted>\n        <Form className=\"SignUpForm\" onSubmit={handleSubmit} inverted >\n          <Segment  inverted stacked>\n          <h1 as=\"h2\">Please Sign Up</h1>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"password\"\n              name=\"passwordConf\"\n              placeholder=\"password Confirmation\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"file\"\n              name=\"photo\"\n              placeholder=\"upload image\"\n              onChange={handleImageInput}\n              required\n            />\n            <Button type='submit' >\n              Sign up\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n        <Segment inverted>\n          <h3>If you have an account, please <Link to=\"/login\">Log In</Link></h3>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { Button, Checkbox, Form, Grid, Segment } from 'semantic-ui-react'\nimport { useNavigate, Link } from \"react-router-dom\"\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState('')\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\"\n  })\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    e.preventDefault();\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch(err){\n      setError(err.message)\n    }\n  }\n  return (\n    // <h1>Setup Login Page</h1>\n    <Grid\n    className = \"LoginGrid\"\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }} className=\"LoginColumn\" inverted>\n        \n        <Form onSubmit={handleSubmit} className=\"LoginForm\" inverted>\n          <Segment inverted>\n          <h1 as=\"h2\">Please log in below</h1>\n            <Form.Input\n            type=\"username\"\n            name=\"username\"\n            placeholder=\"username\"\n            value={state.username}\n            onChange={handleChange}\n            required\n            />\n            <Form.Input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={state.password}\n            onChange={handleChange}\n            required\n            />\n            <Button type=\"submit\">\n              Log in\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n        <Segment inverted>\n          <h3>If you do not have an account, please <Link to=\"/Signup\">Sign up.</Link></h3>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import tokenService from \"./tokenService\";\n\nconst BASE_URL= \"/api/\";\n\nexport function create(postId) {\n    return fetch(`${BASE_URL}posts/${postId}/likes`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }\n\n  export function removeLike(likeId) {\n    return fetch(`${BASE_URL}likes/${likeId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      }\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }","import { token } from \"morgan\";\nimport tokenService from \"./tokenService\";\n\nconst BASE_URL= \"/api/\";\n\nexport function create(postId) {\n    return fetch(`${BASE_URL}posts/${postId}/listenlater`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      },\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }\n\n  export function removeListenLater(listenLaterId) {\n    return fetch(`${BASE_URL}listenlater/${listenLaterId}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(), // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      }\n    }).then((res) => {\n      if (res.ok) return res.json();\n      throw new Error(res.error);\n    });\n  }\n\n  export function getAll(){\n    return fetch(BASE_URL, {\n      headers: {\n        'Authorization': 'Bearer ' + tokenService.getToken(),\n      },\n    }).then((res)=> {\n      if(res.ok) return res.json();\n      return res.json().then(response => {\n        throw new Error(response.err)\n      })\n    })\n  }","import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/posts\"\n\nexport function create(post) {\n    return fetch(BASE_URL, {\n      method: \"POST\",\n      body: post,\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if (res.ok) return res.json(); // res.ok will be try if the http statusCode in the response is anything in the 200's\n      return res.json().then(response => {\n        console.log(response)\n        throw new Error(response.err)\n      })\n    });\n  }\n\n\n  export function getAll() {\n    return fetch(BASE_URL, {\n      headers: {\n        'Authorization': 'Bearer ' + tokenService.getToken() // This grabs thee JWT token out\n        // local storage and send its in the header to the server\n      }\n    })\n    .then((res) => {\n      if(res.ok) return res.json();\n  \n      return res.json().then(response => {\n        console.log(response)\n        throw new Error(response.err)\n      })\n    });\n  }\n\n  export function deletePost(postId){\n    return fetch(BASE_URL + `/` + postId, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: \"Bearer \" + tokenService.getToken(),\n      },\n    }).then((res) => {\n      if(res.ok) return res.json();\n  \n      return res.json().then(response => {\n        console.log(response)\n        throw new Error(response.err)\n      })\n    });\n  }","import { Loader } from \"semantic-ui-react\";\n\nexport default function Loading(){\n    return(\n        <Loader size=\"medium\" active>\n            Loading\n        </Loader>\n    )\n}","import React from \"react\";\nimport { Segment, Card, Image, Button, Icon, Label } from \"semantic-ui-react\"\nimport { Link } from \"react-router-dom\"\nimport {deletePost} from \"../../utils/postApi\"\n\nexport default function PostCard({ posts, loggedUser, isProfile, addLike, removeLike, listenLater, removeListenLater, deletePost }) {\n\n    const likeInit = posts.likes.findIndex(\n        (like) => like.username === loggedUser.username\n    );\n    const likeColor = likeInit > -1 ? \"blue\" : \"grey\";\n    const clickHandler = likeInit > -1 ? () => removeLike(posts.likes[likeInit]._id) : () => addLike(posts._id)\n\n    const listenLaterInit = posts.listenlater.findIndex(\n        (listen) => listen.username === loggedUser.username\n    );\n    const listenLaterColor = listenLaterInit > -1 ? \"blue\" : \"grey\";\n    const listenLaterHandler = listenLaterInit > -1 ? () => removeListenLater(posts.listenlater[listenLaterInit]._id) : () => listenLater(posts._id)\n    \n\n        const handleClick = () => {\n            deletePost(posts._id)\n        }\n\n\n\n    return (\n                <Card style={{ maxWidth: 550, maxHeight: 800}} color=\"green\" key={posts._id} raised>\n                    {isProfile ? (\n                        \"\"\n                    ) : (\n                        <Card.Content>\n                            <Card.Header>\n                                <Link to={`/${posts.user.username}`}>\n                                    <Image\n                                        size=\"large\"\n                                        avatar\n                                        src={\n                                            posts.user.photoUrl\n                                                ? posts.user.photoUrl\n                                                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                                        }\n                                    />\n                                    {posts.user.username}\n                                </Link>\n                            </Card.Header>\n                        </Card.Content>\n                    )}\n                    <Image size=\"big\" src={`${posts?.photoUrl}`}  bordered/>\n                    <Card.Content>\n                        <Card.Description>Artist: {posts.artist}</Card.Description>\n                        <Card.Description>Genre: {posts.genre}</Card.Description>\n                        <Card.Description>Song: {posts.song}</Card.Description>\n                        <Card.Description>Mood: {posts.mood}</Card.Description>\n                    </Card.Content>\n                    <Card.Content>\n                        <Icon\n                            name=\"thumbs up\"\n                            color={likeColor}\n                            onClick={clickHandler}\n                        />\n                        {posts.likes.length} Likes\n                    </Card.Content>\n                    <Card.Content>\n                        <Icon\n                            name=\"heart\"\n                            color={listenLaterColor}\n                            onClick={listenLaterHandler}\n                        /> {posts.listenlater.length} Listen to later\n                    </Card.Content>\n                    <Card.Content>\n                        {posts.user.username === loggedUser.username ?\n                            (\n                                <button\n                                onClick ={handleClick}\n                                >\n                                    Delete\n                                </button>\n                            ) : ( \" \")\n                        }\n                    </Card.Content>\n                </Card>   \n    )\n}","import React from \"react\";\nimport PostCard from \"../../components/PostCard/PostCard\"\nimport { Card, Dimmer, Segment, Image } from 'semantic-ui-react'\nimport Loader from \"../Loader/Loader\"\n\nexport default function DisplayPosts({ posts, isProfile, loggedUser,loading, addLike, removeLike, listenLater, removeListenLater, deletePost }) {\n\n\n\n    return (\n        <Card.Group itemsPerRow={1} stackable>\n            {loading ? (\n          <Segment>\n            <Dimmer active inverted>\n              <Loader size=\"small\">Loading</Loader>\n            </Dimmer>\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n          </Segment>\n        ) : null}\n            {posts.reverse().map((posts) => {\n                return (\n                    <PostCard style={{ maxWidth: 400, maxHeight: 600}}\n                        posts={posts}\n                        key={posts._id}\n                        loggedUser={loggedUser}\n                        isProfile={isProfile}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        listenLater={listenLater}\n                        removeListenLater={removeListenLater}\n                        deletePost={deletePost}\n                    />\n                )\n            })}\n        </Card.Group>\n    )\n}","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { Segment, Divider, Image, Grid } from \"semantic-ui-react\"\nimport userService from \"../../utils/userService\"\nimport * as likesAPI from \"../../utils/likesApi\"\nimport * as listenlaterAPI from \"../../utils/listenlaterApi\"\nimport * as postsAPI from \"../../utils/postApi\"\nimport Loading from \"../../components/Loader/Loader\"\nimport \"./Profile.css\"\nimport PageHeader from \"../../components/Header/Header\"\nimport DisplayPosts from \"../../components/DisplayPosts/DisplayPosts\"\n\nexport default function ProfilePage({ loggedUser }) {\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({})\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n\n    const { username } = useParams();\n\n    async function addLike(postId) {\n        try {\n            const response = await likesAPI.create(postId);\n            console.log(response, \"<-- adding a like\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot add a like, try again\")\n        }\n    }\n    async function removeLike(likeId) {\n        try {\n            const response = await likesAPI.removeLike(likeId)\n            console.log(response, \"<- Removing a like\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot remove a like, try again\")\n        }\n    }\n    async function listenLater(postId) {\n        try {\n            const response = await listenlaterAPI.create(postId);\n            console.log(response, \"<-- favoriting\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot save for later, try again\")\n        }\n    }\n    async function removeListenLater(listenlaterId) {\n        try {\n            const response = await listenlaterAPI.removeListenLater(listenlaterId)\n            console.log(response, \"<- removing\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot remove, try again\")\n        }\n    }\n\n    const getProfile = useCallback(async () => {\n        try {\n            const response = await userService.getProfile(username);\n            setProfileUser(response.data.user)\n            setPosts(response.data.posts)\n            console.log(response)\n        } catch (err) {\n            console.log(err.message)\n            setError(\"Profile does not exist! You are in the wrong place\")\n        }\n    }, [username]);\n\n    async function deletePost(postId) {\n        try {\n            setLoading(true);\n            const response = await postsAPI.deletePost(postId);\n            getPosts();\n            setLoading(false);\n        } catch (err) {\n            setError(\"Error deleting posts, try again.\")\n        }\n    }\n    async function getPosts() {\n        try {\n            const response = await postsAPI.getAll();\n            setPosts([...response.data]);\n            setLoading(false);\n        } catch (err) {\n            setLoading(false)\n        }\n    }\n\n\n    useEffect(() => {\n        console.log(\"It is working!!\")\n        getProfile();\n    }, [username, getProfile])\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader loggedUser={loggedUser} />\n                </Grid.Column>\n            </Grid.Row>\n        <Grid.Row centered>\n            <h1 >Welcome to {username}'s page</h1>\n            </Grid.Row>\n            <Grid.Row centered>\n\n                <Image className=\"profile\" rounded src={\n                    loggedUser?.photoUrl\n                        ? loggedUser?.photoUrl\n                        : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                } avatar size=\"small\" />\n\n            </Grid.Row>\n            <Grid.Row centered>\n                <span><h1 >Total posts: {posts.length}</h1></span>\n            </Grid.Row>\n            <Divider />\n            <Grid.Row>\n                <Grid.Column centered style={{ maxWidth: 600}}>\n                    <DisplayPosts\n                        posts={posts}\n                        isProfile={true}\n                        loggedUser={loggedUser}\n                        addLike={addLike}\n                        removeLike={removeLike}\n                        listenLater={listenLater}\n                        removeListenLater={removeListenLater}\n                        deletePost={deletePost}\n                    />\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, List, Image, Segment, Icon, Popup, ListContent } from \"semantic-ui-react\";\nimport \"./Header.css\";\n\nimport ProfilePage from \"../../pages/Profile/Profile\"\n\nexport default function PageHeader({ loggedUser, handleLogout }) {\n    return (\n        <Segment id=\"header\" className=\"links\">\n            <Header  as='h2' floated=\"left\">\n                <Link to={`/${loggedUser?.username}`}>\n                    <Image circular src={\n                        loggedUser?.photoUrl\n                            ? loggedUser?.photoUrl\n                            : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\n                    } avatar size=\"tiny\" /><span> {loggedUser?.username}</span>\n                </Link>\n            </Header>\n            <Header >\n                <h1 className=\"musicbox\"> Music Box</h1>\n            </Header>\n            <List horizontal floated=\"right\">\n                <List.Item>\n                <h2 textAlign=\"justified\">\n                        <Link to=\"/\"><Icon\n                                name=\"home\"\n                                color='blue'\n                            /></Link>\n                    </h2>\n                </List.Item>\n                <List.Item>\n                <List.Content>\n                    \n                    <List.Content>\n                    <h2 textAlign=\"justified\">\n                        <Popup content=\"Profile\"\n                            trigger={\n                                <Link to={`/${loggedUser?.username}`}>\n                                    <Icon\n                                        name=\"user outline\"\n                                        color='blue'\n                                    />\n                                </Link>} inverted\n                        />\n                    </h2>\n                </List.Content>\n                </List.Content>\n                </List.Item>\n                <List.Item>\n                <List.Content>\n                    <h2 textAlign=\"justified\">\n                        <Link to=\"/Login\" >\n\n                            <Icon\n                                name=\"log out\"\n                                color='blue'\n                            />\n\n                        </Link>\n                    </h2>\n                </List.Content>\n                </List.Item>\n            </List>\n            {/* <Header className=\"links\" textAlign=\"justified\" > */}\n\n\n\n\n\n            {/* </Header> */}\n        </Segment>\n    )\n}","import React, { useState } from \"react\";\nimport { Button, Form, Segment, Popup, Icon} from \"semantic-ui-react\";\n\nexport default function AddPostForm(props) {\n\n    const [state, setState] = useState({\n        song: \"\",\n        artist: \"\",\n        genre: \"\",\n        mood: \"\"\n    })\n\n    const [selectedFile, setSelectedFile] = useState(\"\");\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleImageInput(e){\n        setSelectedFile(e.target.files[0])\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('photo', selectedFile)\n        for (let value in state){\n            formData.append(value, state[value])\n        }\n        console.log(formData.forEach((item) => console.log(item)), \"<- this is each value\" )\n        props.handleAddPost(formData);\n    \n    }\n    return (\n        <>\n    <Popup content={\n            <Segment style={{ maxWidth: 450 }} position=\"center\">\n                <Form onSubmit={handleSubmit}>\n                    <Form.Input\n                        name=\"song\"\n                        value={state.song}\n                        placeholder=\"Song\"\n                        onChange={handleChange}\n                    />\n                    <Form.Input\n                        name=\"artist\"\n                        value={state.artist}\n                        placeholder=\"Artist\"\n                        onChange={handleChange}\n                    />\n                    <Form.Input\n                        name=\"genre\"\n                        value={state.genre}\n                        placeholder=\"Genre\"\n                        onChange={handleChange}\n                    />\n                    <Form.Input\n                        name=\"mood\"\n                        value={state.mood}\n                        placeholder=\"mood\"\n                        onChange={handleChange}\n                    />\n                    <Form.Field>\n                        <Form.Input\n                            type=\"file\"\n                            name=\"photo\"\n                            placeholder=\"upload image\"\n                            onChange={handleImageInput}\n                        />\n                    </Form.Field>\n                    <Button type=\"submit\" size=\"large\" onClick={handleSubmit}>\n                        Submit Post!\n                    </Button>\n                </Form>\n            </Segment>\n    }\n    on=\"click\"\n    positionFixed\n    trigger={<Button animated=\"vertical\" size=\"large\">\n        <Button.Content visible>\n        <Icon name=\"add square\" color=\"blue\" size=\"large\"/>\n        </Button.Content>\n        <Button.Content hidden>\n            Add a Post!\n        </Button.Content>\n        </Button>}\n    />\n        </>\n    )\n}","import React, {useState, useEffect} from \"react\";\nimport \"./Feed.css\"\n\nimport PageHeader from \"../../components/Header/Header\"\nimport AddPostForm from \"../../components/AddPostForm/AddPostForm\"\nimport DisplayPosts from \"../../components/DisplayPosts/DisplayPosts\"\nimport Loading from \"../../components/Loader/Loader\"\n\nimport * as postsAPI from \"../../utils/postApi\"\nimport * as likesAPI from \"../../utils/likesApi\"\nimport * as listenlaterAPI from \"../../utils/listenlaterApi\"\n\nimport { Grid } from \"semantic-ui-react\"\n\nexport default function Feed({loggedUser, handleLogout}){\n    const [post, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    async function addLike(postId){\n        try {\n            const response = await likesAPI.create(postId);\n            console.log(response, \"<-- adding a like\")\n            getPosts();\n        } catch(err){\n            setError(\"Cannot add a like, try again\")\n        }\n    }\n    async function removeLike(likeId){\n        try {\n            const response = await likesAPI.removeLike(likeId)\n            console.log(response, \"<- Removing a like\")\n            getPosts();\n        } catch(err){\n            setError(\"Cannot remove a like, try again\")\n        }\n    }\n\n    async function listenLater(postId){\n        try{\n            const response = await listenlaterAPI.create(postId);\n            console.log(response, \"<-- favoriting\")\n            getPosts();\n        } catch(err){\n            setError(\"Cannot save for later, try again\")\n        }\n    }\n    async function removeListenLater(listenlaterId){\n        try{\n            const response = await listenlaterAPI.removeListenLater(listenlaterId)\n            console.log(response, \"<- removing\")\n            getPosts();\n        } catch(err){\n            setError(\"Cannot remove, try again\")\n        }\n    }\n\n\n    async function handleAddPost(post){\n        try{\n            setLoading(true);\n            const response = await postsAPI.create(post)\n            console.log(response)\n            getPosts();\n            setLoading(false);\n        } catch(err){\n            setError('Error creating post, please try again')\n        }\n    }\n\n    async function getPosts(){\n        try{\n            const response = await postsAPI.getAll();\n            setPosts([...response.data]);\n            setLoading(false);\n        } catch(err){\n            setLoading(false)\n        }\n    }\n\n    async function deletePost(postId){\n        try{\n            setLoading(true);\n            const response = await postsAPI.deletePost(postId);\n            getPosts();\n            setLoading(false);\n        } catch(err){\n            setError(\"Error deleting posts, try again.\")\n        }\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, []);\n\n    if (error) {\n        return (\n          <>\n            <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n          </>\n        );\n      }\n    \n      if (loading) {\n        return (\n          <>\n            <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n            <Loading />\n          </>\n        );\n      }\n\n    return (\n        <Grid centered>\n            <Grid.Row>\n        <Grid.Column>\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\n        </Grid.Column>\n      </Grid.Row>\n      \n      <Grid.Row centered>\n      <AddPostForm handleAddPost={handleAddPost}/>\n        </Grid.Row>\n      <Grid.Row>\n        <Grid.Column centered style={{ maxWidth: 600}}>\n        <DisplayPosts \n        posts={post} \n        loggedUser={loggedUser} \n        loading={loading}\n        isProfile={false} \n        addLike={addLike} \n        removeLike={removeLike}\n        listenLater={listenLater}\n        removeListenLater={removeListenLater}\n        deletePost={deletePost}\n        />\n        </Grid.Column>\n        </Grid.Row>\n        </Grid>\n    )\n}","import React, {useState, useCallback, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\"\n\nimport userService from \"../../utils/userService\"\nimport * as likesAPI from \"../../utils/likesApi\"\nimport * as listenlaterAPI from \"../../utils/listenlaterApi\"\n\nimport PageHeader from \"../../components/Header/Header\"\nimport DisplayPosts from \"../../components/DisplayPosts/DisplayPosts\"\n\nexport default function ListenLater({loggedUser}){\n    const [posts, setPosts] = useState([]);\n    const [profileUser, setProfileUser] = useState({})\n    const [error, setError] = useState(\"\");\n    const { username } = useParams();\n\n    async function addLike(postId) {\n        try {\n            const response = await likesAPI.create(postId);\n            console.log(response, \"<-- adding a like\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot add a like, try again\")\n        }\n    }\n    async function removeLike(likeId) {\n        try {\n            const response = await likesAPI.removeLike(likeId)\n            console.log(response, \"<- Removing a like\")\n            getProfile();\n        } catch (err) {\n            setError(\"Cannot remove a like, try again\")\n        }\n    }\n    async function listenLater(postId){\n        try{\n            const response = await listenlaterAPI.create(postId);\n            console.log(response, \"<-- favoriting\")\n            getProfile();\n        } catch(err){\n            setError(\"Cannot save for later, try again\")\n        }\n    }\n    async function removeListenLater(listenlaterId){\n        try{\n            const response = await listenlaterAPI.removeListenLater(listenlaterId)\n            console.log(response, \"<- removing\")\n            getProfile();\n        } catch(err){\n            setError(\"Cannot remove, try again\")\n        }\n    }\n\n    const getProfile = useCallback(async () => {\n        try {\n            const response = await userService.getProfile(username);\n            setProfileUser(response.data.user)\n            setPosts(response.data.posts)\n            console.log(response)\n        } catch (err) {\n            console.log(err.message)\n            setError(\"Profile does not exist! You are in the wrong place\")\n        }\n    }, [username]);\n\n    useEffect(() => {\n        console.log(\"It is working!!\")\n        getProfile();\n    }, [username, getProfile])\n\n    \n    return(\n        <>\n        <PageHeader loggedUser={loggedUser} />\n        <DisplayPosts \n        posts={posts}\n        numPhotosCol={1}\n        isProfile={true}\n        loggedUser={loggedUser}\n        addLike={addLike}\n        removeLike={removeLike}\n        listenLater={listenLater}\n        removeListenLater={removeListenLater}\n        />\n        <h1>Listen to these songs later</h1>\n        </>\n\n)}","import React, { useState } from \"react\";\nimport { Navigate, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport Feed from \"../Feed/Feed\";\nimport Profile from \"../Profile/Profile\"\nimport ListenLater from '../ListenLater/ListenLater'\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like\n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n\n  if (user) {\n    // if the user is logged in (AKA the json web token JWT exists)\n    return (\n      <Routes>\n        <Route path=\"/\" element={<Feed loggedUser={user} handleLogout={handleLogout}/>} />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n         <Route\n        path='/listenlater'\n        element={<ListenLater loggedUser={user} handleLogout={handleLogout}/>}\n        >\n\n        </Route>\n        <Route\n        path='/:username'\n        element={<Profile loggedUser={user} handleLogout={handleLogout}/>}\n        >\n        </Route>\n       \n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}